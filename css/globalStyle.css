/* font style start */

@font-face {
  font-family: "introscriptr-h2base";
  src: url("fonts/introscriptr-h2base-webfont.woff2") format("woff2"),
    url("fonts/introscriptr-h2base-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "introheadr-base";
  src: url("fonts/introheadr-base-webfont.woff2") format("woff2"),
    url("fonts/introheadr-base-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "introrustg-base2line";
  src: url("fonts/introrustg-base2line-webfont.woff2") format("woff2"),
    url("fonts/introrustg-base2line-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

/* font style end */

html {
  background-color: #869960;
  /* line-height: 1.75 ; */
}

/* set font for all paragraphs */
body {
  font-family: "introrustg-base2line", Arial, sans-serif;
  font-size: 150%;
  margin: 0;
  padding: 0;
}

img {
  /* for fit a widht of a parent box */
  max-width: 100%;
  /* for fit and shring a main column */
  height: auto;
}
/* UX: users' eyes focus on the center of the page */
.container {
  max-width: 940px;
  margin: auto;
  background: url(../img/color-tile.png) left bottom repeat-x,
    #fff url(../img/color-tile.png) left top repeat-x;
  padding-top: 15px;
  padding-right: 40px;
  padding-left: 40px;
  /* Width of box changed, but we still want to our width as a max-width 940px. Padding will remain, but max-width stay no changed */
  box-sizing: border-box;
}

.new-layout-container {
  max-width: 940px;
  margin: 0 auto;
  padding-right: 40px;
  padding-left: 40px;
}

.first-page {
  background: url(../img/very-large-flamingo.jpg), top center, no-repeat;
  background-repeat: no-repeat;
}

header {
  padding-top: 20px;
  color: #617140;
}
.header-image {
  background-image: url(../img/very-large-flamingo.jpg);
  background-position: left top;
  background-repeat: no-repeat;
}

.new-layout {
  background-color: #617140;
  color: #fff;
}

footer {
  text-align: center;
  font-size: 85%;
  color: #999;
  padding: 20px 0 20px 0;
}

header h1 {
  font-family: "introrustg-base2line", sans-serif;
  margin: 0;
  font-weight: normal;
  font-size: 600%;
  font-style: none;
  /* text-shadow: 10px 5px 15px rgba(0, 0, 0, 0.5); */
}

header p {
  margin: 0;
  letter-spacing: 4px;
}

.content-area {
  border-top: 3px solid #e5e9dc;
  border-bottom: 3px solid #e5e9dc;
  background-color: #fff;
}

/* CLEANING FLOAT START
    User float to set elements in column layout. Floated elements position themselfs next tu each other in a row. But parent element doesn't see floated children, so we need to clean float by ready exist solution. We add ".group" class in to parent class group.
     */
.main-area {
  width: 66%;
  float: left;
  /* again: now total width of element is changed by padding 66% + 40px, but we still want our width to be 66%, so we use box-sizing: border-box */
  box-sizing: border-box;
}

.sidebar {
  width: 34%;
  float: left;
  background-color: #e5e9dc;
  /* wery ipdated browser*/
  background-image: -webkit-gradient(
    linear,
    left top,
    left bottom,
    from(#e5e9dc),
    to(#fff)
  );
  /* slighty updated browser */
  background-image: -webkit-linear-gradient(top, #e5e9dc, #fff);
  /* mozilla  */
  background-image: -moz-linear-gradient(top, #e5e9dc, #fff);
  /* mircosoft */
  background-image: -ms-linear-bradient(top, #e5e9dc, #fff);
  /* opera */
  background-image: -o-linear-gradient(top, #e5e9dc, #fff);
  /* our background-img
   */
  background-image: linear-gradient(to bottom, #e5e9dc, #fff);
  padding: 20px 40px;
  box-sizing: border-box;
  font-size: 85%;
}
/* bad soultion of cleaning float for m children element, becouse we don't want to add empty and useless elements. Someone could ask why don't we put this class to the footer, or other element benife of the parent with floated children. That should work, but good practice is to create independent boxexs/containers for each group of elements. */
.fix {
  clear: both;
}
/* Good practice slution. This code mast be added once, and reuse */
.group:before,
.group:after {
  content: "";
  display: table;
}

.group:after {
  clear: both;
}

.group {
  zoom: 1;
}
/* CLEANING FLOAT END */

/* NAV START */

/* add space between nav and other elements */
.site-nav {
  margin-top: 20px;
}

/* remove default style from ul element */
.site-nav ul {
  margin: 0;
  padding: 0;
}

/* remove bullets */
.site-nav li {
  list-style: none;
  /* position horisontal: parent element, "ul" has no knowladge about his children if they are floated. So we add group class to parent el. ul */
  float: left;
  letter-spacing: 14px;
}

.site-nav a {
  /* "a" element is default inline display, so we can't set them width. We want that souranding be aware about "a" width or padding */
  display: block;
  /* remove underground */
  text-decoration: none;
  /* color for links */
  color: #617140;
  /* add padding for "a" elements */
  padding: 10px 20px;
  /* add space horizontaly in each "a" elements */
  margin-right: 5px;
  margin-bottom: 5px;
  border: 3px solid #e5e9dc;
  /* fix duble border efect when two diffrent border stick to each other */
  border-bottom: 3px solid #e5e9dc;
  background-color: #fff;
}

.new-layout .site-nav a {
  color: #fff;
  background-color: #617140;
}

/* set hover on mouse touch by user pseudo class "hover */
.site-nav a:hover {
  background-color: #e5e9dc;
}

/* NAV END */

/* BANNER-IMAGE START */

/* Usinng position absolute: element is positioning on absolut position to its nearest parent (relatives). If we do not said which parent element is a relative directly, absolut element will be pisition in to DOM element. */
.banner-description {
  position: absolute;
  /* bottom zero from what? */
  bottom: 0;
  /* left zero from what? */
  left: 0;
  /* Style a text */
  color: #fff;
  /* for transparent color use rgba colors: R: red, B: blue, G: green, A: alpha - for trnasparent */
  background-color: rgba(0, 0, 0, 0.65);
  padding: 15px 25px;
}
/* From parent with relative position. We can set a position horisontal and vertical for element with relative position too. But it will be change position in to relation to its original position. It won't impact other elements in neighberhood. */
.image-banner {
  position: relative;
  /* If multiple element overlapping each other we can use z-index: 10 for stacking order; It can overide defalt behavior of overlapping elements which is element with relative or absolute position in latter pisition in html, overlaps the earlier element with relative or absolute position. With z-index we can controle which one element will be overlaps by adding index valiue, always bigger value overlap smaler value */
  /* left: 100px;
    z-index: 10; */
}

.background-img-bird {
  text-align: center;
  padding: 100px 0;
  /* short version */
  background: #c2bbb1 url(../img/bird.jpg) center center no-repeat;
  background-size: cover;
  /* background-position: center center;
  background-size: cover;
  background-repeat: no-repeat; */

  /* other solution */
  /* background-size: 100%; */
}

/* img element is inline default, and it set a width and height by font size, line hight values, so it isn't precise. So we need to set display block for img */
.image-banner img {
  display: block;
}
/* BANNER-IMAGE END */

/* TABLE STYLE START */

table {
  /* rid of spacing between tab cells */
  border-spacing: 0;
  /* set correct haviness for borders inside tab */
  border-collapse: collapse;
  /* Tab take as many space is it is needed, so it can be not all avaliable space. So we set width on 100% */
  width: 100%;
}
/* Control width of tab column: by first elemenst in first row of table. So we set width for theader td by uniqie class name */
.col-id {
  width: 10%;
}

.col-name {
  width: 10%;
}

.col-quote {
  width: 80%;
}

table th {
  text-align: left;
  background-color: #869960;
  color: #fff;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.4);
}
table th,
table td {
  border: 1px solid #869960;
  padding: 10px;
  /* If content of cell is bigger than one line, the height of whole row will changed, and position of other, single chart, will be not in one level, so wie set vertical position */
  vertical-align: middle;
}
/* Set zebra row in talbe */
table tbody tr:nth-child(even) td {
  background-color: #e5e9dc;
}

/* Get to specyfic column. This rules can be apply for specyfic tab. For other tab it won't match. So we add specyfic class name for our tab  */
table.quotes-tab tr :nth-child(2),
table.quotes-tab tr :nth-child(3) {
  text-align: center;
}
/* TABLE STYLE END */

/* FORM STYLE START */

form {
  background-color: #ececec;
  padding: 30px 40px;
}

/* Element is hidden, but browser can access a field */
.label-hidden {
  position: absolute;
  width: 0;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

input,
select {
  font-family: Tahoma, sans-serif;
  font-size: 100%;
}

select {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border-radius: 0;
}

input[type="password"],
input[type="email"],
select {
  width: 100%;
  display: block;
  box-sizing: border-box;
  padding: 0 10px;
  height: 40px;
  margin-bottom: 15px;
  border: 1px solid #cdcdcd;
}

input[type="password"]:focus,
input[type="email"]:focus {
  border: 1px solid #869960;
  box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.13);
  outline: none;
}

input[type="submit"] {
  width: 100%;
  display: block;
  box-sizing: border-box;
  padding: 10px 0;
  margin-bottom: 10px;
  border-radius: 3px;
  background-color: #869960;
  color: #fff;
  outline: none;
}

input[type="submit"]:hover,
input[type="submit"]:focus {
  border: 1px solid #535e38;
  background-color: #798a56;
}

.checkbox-text {
  font-size: 85%;
  color: #777;
}

/* FORM STYLE END */

/* BOX STYLE START */
.box-A {
  background-color: lightgray;
  padding: 30px;
  border: 3px black solid;
  margin-bottom: 10px;
  width: 250px;
  height: 250px;
  box-sizing: border-box;
}

.box-B {
  background-color: orange;
  width: 250px;
  height: 250px;
}
/* BOX STYLE END */
